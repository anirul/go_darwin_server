// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: client_parameter.proto

package darwin_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TextSizeEnum int32

const (
	TextSizeEnum_TEXT_SIZE_SMALL  TextSizeEnum = 0 // 18 pixels
	TextSizeEnum_TEXT_SIZE_MEDIUM TextSizeEnum = 1 // 24 pixels
	TextSizeEnum_TEXT_SIZE_LARGE  TextSizeEnum = 2 // 36 pixels
	TextSizeEnum_TEXT_SIZE_TITLE  TextSizeEnum = 3 // 160 pixels
	TextSizeEnum_TEXT_SIZE_LARGER TextSizeEnum = 4 // 80 pixels
)

// Enum value maps for TextSizeEnum.
var (
	TextSizeEnum_name = map[int32]string{
		0: "TEXT_SIZE_SMALL",
		1: "TEXT_SIZE_MEDIUM",
		2: "TEXT_SIZE_LARGE",
		3: "TEXT_SIZE_TITLE",
		4: "TEXT_SIZE_LARGER",
	}
	TextSizeEnum_value = map[string]int32{
		"TEXT_SIZE_SMALL":  0,
		"TEXT_SIZE_MEDIUM": 1,
		"TEXT_SIZE_LARGE":  2,
		"TEXT_SIZE_TITLE":  3,
		"TEXT_SIZE_LARGER": 4,
	}
)

func (x TextSizeEnum) Enum() *TextSizeEnum {
	p := new(TextSizeEnum)
	*p = x
	return p
}

func (x TextSizeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TextSizeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_client_parameter_proto_enumTypes[0].Descriptor()
}

func (TextSizeEnum) Type() protoreflect.EnumType {
	return &file_client_parameter_proto_enumTypes[0]
}

func (x TextSizeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TextSizeEnum.Descriptor instead.
func (TextSizeEnum) EnumDescriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{0}
}

type AlignmentEnum int32

const (
	AlignmentEnum_ALIGNMENT_TOP_LEFT     AlignmentEnum = 0 // Hook at top left.
	AlignmentEnum_ALIGNMENT_TOP          AlignmentEnum = 1 // Hook at top center.
	AlignmentEnum_ALIGNMENT_TOP_RIGHT    AlignmentEnum = 2 // Hook at top right.
	AlignmentEnum_ALIGNMENT_CENTER_LEFT  AlignmentEnum = 3 // Hook at center left.
	AlignmentEnum_ALIGNMENT_CENTER       AlignmentEnum = 4 // Hook at center.
	AlignmentEnum_ALIGNMENT_CENTER_RIGHT AlignmentEnum = 5 // Hook at center right.
	AlignmentEnum_ALIGNMENT_BOTTOM_LEFT  AlignmentEnum = 6 // Hook at bottom left.
	AlignmentEnum_ALIGNMENT_BOTTOM       AlignmentEnum = 7 // Hook at bottom center.
	AlignmentEnum_ALIGNMENT_BOTTOM_RIGHT AlignmentEnum = 8 // Hook at bottom right.
)

// Enum value maps for AlignmentEnum.
var (
	AlignmentEnum_name = map[int32]string{
		0: "ALIGNMENT_TOP_LEFT",
		1: "ALIGNMENT_TOP",
		2: "ALIGNMENT_TOP_RIGHT",
		3: "ALIGNMENT_CENTER_LEFT",
		4: "ALIGNMENT_CENTER",
		5: "ALIGNMENT_CENTER_RIGHT",
		6: "ALIGNMENT_BOTTOM_LEFT",
		7: "ALIGNMENT_BOTTOM",
		8: "ALIGNMENT_BOTTOM_RIGHT",
	}
	AlignmentEnum_value = map[string]int32{
		"ALIGNMENT_TOP_LEFT":     0,
		"ALIGNMENT_TOP":          1,
		"ALIGNMENT_TOP_RIGHT":    2,
		"ALIGNMENT_CENTER_LEFT":  3,
		"ALIGNMENT_CENTER":       4,
		"ALIGNMENT_CENTER_RIGHT": 5,
		"ALIGNMENT_BOTTOM_LEFT":  6,
		"ALIGNMENT_BOTTOM":       7,
		"ALIGNMENT_BOTTOM_RIGHT": 8,
	}
)

func (x AlignmentEnum) Enum() *AlignmentEnum {
	p := new(AlignmentEnum)
	*p = x
	return p
}

func (x AlignmentEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlignmentEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_client_parameter_proto_enumTypes[1].Descriptor()
}

func (AlignmentEnum) Type() protoreflect.EnumType {
	return &file_client_parameter_proto_enumTypes[1]
}

func (x AlignmentEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlignmentEnum.Descriptor instead.
func (AlignmentEnum) EnumDescriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{1}
}

type DecorationEnum int32

const (
	DecorationEnum_DECORATION_NONE    DecorationEnum = 0 // No outline.
	DecorationEnum_DECORATION_SHADOW  DecorationEnum = 1 // Shadow a single outline in one direction.
	DecorationEnum_DECORATION_OUTLINE DecorationEnum = 2 // Outlne a shadow that is in every direction.
)

// Enum value maps for DecorationEnum.
var (
	DecorationEnum_name = map[int32]string{
		0: "DECORATION_NONE",
		1: "DECORATION_SHADOW",
		2: "DECORATION_OUTLINE",
	}
	DecorationEnum_value = map[string]int32{
		"DECORATION_NONE":    0,
		"DECORATION_SHADOW":  1,
		"DECORATION_OUTLINE": 2,
	}
)

func (x DecorationEnum) Enum() *DecorationEnum {
	p := new(DecorationEnum)
	*p = x
	return p
}

func (x DecorationEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecorationEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_client_parameter_proto_enumTypes[2].Descriptor()
}

func (DecorationEnum) Type() protoreflect.EnumType {
	return &file_client_parameter_proto_enumTypes[2]
}

func (x DecorationEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecorationEnum.Descriptor instead.
func (DecorationEnum) EnumDescriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{2}
}

// FontSize
// Next: 3
type FontSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextSizeEnum TextSizeEnum `protobuf:"varint,1,opt,name=text_size_enum,json=textSizeEnum,proto3,enum=proto.TextSizeEnum" json:"text_size_enum,omitempty"`
	Size         float64      `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FontSize) Reset() {
	*x = FontSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FontSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FontSize) ProtoMessage() {}

func (x *FontSize) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FontSize.ProtoReflect.Descriptor instead.
func (*FontSize) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{0}
}

func (x *FontSize) GetTextSizeEnum() TextSizeEnum {
	if x != nil {
		return x.TextSizeEnum
	}
	return TextSizeEnum_TEXT_SIZE_SMALL
}

func (x *FontSize) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// ClientParameter
// Next: 8
type ClientParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default server name.
	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	// Is ssl enable.
	IsSslEnable bool `protobuf:"varint,2,opt,name=is_ssl_enable,json=isSslEnable,proto3" json:"is_ssl_enable,omitempty"`
	// Default font.
	FontFile string `protobuf:"bytes,3,opt,name=font_file,json=fontFile,proto3" json:"font_file,omitempty"`
	// Default font sizes.
	FontSizes []*FontSize `protobuf:"bytes,4,rep,name=font_sizes,json=fontSizes,proto3" json:"font_sizes,omitempty"`
	// Overlay of the title.
	OverlayTitle *PageDescription `protobuf:"bytes,5,opt,name=overlay_title,json=overlayTitle,proto3" json:"overlay_title,omitempty"`
	// This is the overlay on state change.
	OverlayState *PageDescription `protobuf:"bytes,6,opt,name=overlay_state,json=overlayState,proto3" json:"overlay_state,omitempty"`
	// This is the overlay when you play.
	OverlayPlay *PageDescription `protobuf:"bytes,7,opt,name=overlay_play,json=overlayPlay,proto3" json:"overlay_play,omitempty"`
}

func (x *ClientParameter) Reset() {
	*x = ClientParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientParameter) ProtoMessage() {}

func (x *ClientParameter) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientParameter.ProtoReflect.Descriptor instead.
func (*ClientParameter) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{1}
}

func (x *ClientParameter) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ClientParameter) GetIsSslEnable() bool {
	if x != nil {
		return x.IsSslEnable
	}
	return false
}

func (x *ClientParameter) GetFontFile() string {
	if x != nil {
		return x.FontFile
	}
	return ""
}

func (x *ClientParameter) GetFontSizes() []*FontSize {
	if x != nil {
		return x.FontSizes
	}
	return nil
}

func (x *ClientParameter) GetOverlayTitle() *PageDescription {
	if x != nil {
		return x.OverlayTitle
	}
	return nil
}

func (x *ClientParameter) GetOverlayState() *PageDescription {
	if x != nil {
		return x.OverlayState
	}
	return nil
}

func (x *ClientParameter) GetOverlayPlay() *PageDescription {
	if x != nil {
		return x.OverlayPlay
	}
	return nil
}

// ColorString
// Next: 5
type ColorString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red   string `protobuf:"bytes,1,opt,name=red,proto3" json:"red,omitempty"`
	Green string `protobuf:"bytes,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue  string `protobuf:"bytes,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Alpha string `protobuf:"bytes,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *ColorString) Reset() {
	*x = ColorString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorString) ProtoMessage() {}

func (x *ColorString) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorString.ProtoReflect.Descriptor instead.
func (*ColorString) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{2}
}

func (x *ColorString) GetRed() string {
	if x != nil {
		return x.Red
	}
	return ""
}

func (x *ColorString) GetGreen() string {
	if x != nil {
		return x.Green
	}
	return ""
}

func (x *ColorString) GetBlue() string {
	if x != nil {
		return x.Blue
	}
	return ""
}

func (x *ColorString) GetAlpha() string {
	if x != nil {
		return x.Alpha
	}
	return ""
}

// Vector2String
// Next: 3
type Vector2String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X string `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y string `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vector2String) Reset() {
	*x = Vector2String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector2String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2String) ProtoMessage() {}

func (x *Vector2String) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2String.ProtoReflect.Descriptor instead.
func (*Vector2String) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{3}
}

func (x *Vector2String) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *Vector2String) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

// PageElementDecoration
// Next: 5
type PageElementDecoration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OffsetOneof:
	//
	//	*PageElementDecoration_Offset
	//	*PageElementDecoration_OffsetString
	OffsetOneof isPageElementDecoration_OffsetOneof `protobuf_oneof:"OffsetOneof"`
	// Types that are assignable to ColorOneof:
	//
	//	*PageElementDecoration_Color
	//	*PageElementDecoration_ColorString
	ColorOneof     isPageElementDecoration_ColorOneof `protobuf_oneof:"ColorOneof"`
	DecorationEnum DecorationEnum                     `protobuf:"varint,5,opt,name=decoration_enum,json=decorationEnum,proto3,enum=proto.DecorationEnum" json:"decoration_enum,omitempty"`
}

func (x *PageElementDecoration) Reset() {
	*x = PageElementDecoration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementDecoration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementDecoration) ProtoMessage() {}

func (x *PageElementDecoration) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementDecoration.ProtoReflect.Descriptor instead.
func (*PageElementDecoration) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{4}
}

func (m *PageElementDecoration) GetOffsetOneof() isPageElementDecoration_OffsetOneof {
	if m != nil {
		return m.OffsetOneof
	}
	return nil
}

func (x *PageElementDecoration) GetOffset() *Vector2 {
	if x, ok := x.GetOffsetOneof().(*PageElementDecoration_Offset); ok {
		return x.Offset
	}
	return nil
}

func (x *PageElementDecoration) GetOffsetString() *Vector2String {
	if x, ok := x.GetOffsetOneof().(*PageElementDecoration_OffsetString); ok {
		return x.OffsetString
	}
	return nil
}

func (m *PageElementDecoration) GetColorOneof() isPageElementDecoration_ColorOneof {
	if m != nil {
		return m.ColorOneof
	}
	return nil
}

func (x *PageElementDecoration) GetColor() *Vector4 {
	if x, ok := x.GetColorOneof().(*PageElementDecoration_Color); ok {
		return x.Color
	}
	return nil
}

func (x *PageElementDecoration) GetColorString() *ColorString {
	if x, ok := x.GetColorOneof().(*PageElementDecoration_ColorString); ok {
		return x.ColorString
	}
	return nil
}

func (x *PageElementDecoration) GetDecorationEnum() DecorationEnum {
	if x != nil {
		return x.DecorationEnum
	}
	return DecorationEnum_DECORATION_NONE
}

type isPageElementDecoration_OffsetOneof interface {
	isPageElementDecoration_OffsetOneof()
}

type PageElementDecoration_Offset struct {
	Offset *Vector2 `protobuf:"bytes,1,opt,name=offset,proto3,oneof"`
}

type PageElementDecoration_OffsetString struct {
	OffsetString *Vector2String `protobuf:"bytes,2,opt,name=offset_string,json=offsetString,proto3,oneof"`
}

func (*PageElementDecoration_Offset) isPageElementDecoration_OffsetOneof() {}

func (*PageElementDecoration_OffsetString) isPageElementDecoration_OffsetOneof() {}

type isPageElementDecoration_ColorOneof interface {
	isPageElementDecoration_ColorOneof()
}

type PageElementDecoration_Color struct {
	Color *Vector4 `protobuf:"bytes,3,opt,name=color,proto3,oneof"`
}

type PageElementDecoration_ColorString struct {
	ColorString *ColorString `protobuf:"bytes,4,opt,name=color_string,json=colorString,proto3,oneof"`
}

func (*PageElementDecoration_Color) isPageElementDecoration_ColorOneof() {}

func (*PageElementDecoration_ColorString) isPageElementDecoration_ColorOneof() {}

// PageElementText
// Next: 9
type PageElementText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Types that are assignable to ColorOneof:
	//
	//	*PageElementText_Color
	//	*PageElementText_ColorString
	ColorOneof isPageElementText_ColorOneof `protobuf_oneof:"ColorOneof"`
	// Types that are assignable to PositionOneof:
	//
	//	*PageElementText_Position
	//	*PageElementText_PositionString
	PositionOneof isPageElementText_PositionOneof `protobuf_oneof:"PositionOneof"`
	TextSizeEnum  TextSizeEnum                    `protobuf:"varint,6,opt,name=text_size_enum,json=textSizeEnum,proto3,enum=proto.TextSizeEnum" json:"text_size_enum,omitempty"`
	AlignmentEnum AlignmentEnum                   `protobuf:"varint,7,opt,name=alignment_enum,json=alignmentEnum,proto3,enum=proto.AlignmentEnum" json:"alignment_enum,omitempty"`
	NoReplace     bool                            `protobuf:"varint,8,opt,name=no_replace,json=noReplace,proto3" json:"no_replace,omitempty"`
	Decorations   []*PageElementDecoration        `protobuf:"bytes,9,rep,name=decorations,proto3" json:"decorations,omitempty"`
}

func (x *PageElementText) Reset() {
	*x = PageElementText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementText) ProtoMessage() {}

func (x *PageElementText) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementText.ProtoReflect.Descriptor instead.
func (*PageElementText) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{5}
}

func (x *PageElementText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (m *PageElementText) GetColorOneof() isPageElementText_ColorOneof {
	if m != nil {
		return m.ColorOneof
	}
	return nil
}

func (x *PageElementText) GetColor() *Vector4 {
	if x, ok := x.GetColorOneof().(*PageElementText_Color); ok {
		return x.Color
	}
	return nil
}

func (x *PageElementText) GetColorString() *ColorString {
	if x, ok := x.GetColorOneof().(*PageElementText_ColorString); ok {
		return x.ColorString
	}
	return nil
}

func (m *PageElementText) GetPositionOneof() isPageElementText_PositionOneof {
	if m != nil {
		return m.PositionOneof
	}
	return nil
}

func (x *PageElementText) GetPosition() *Vector2 {
	if x, ok := x.GetPositionOneof().(*PageElementText_Position); ok {
		return x.Position
	}
	return nil
}

func (x *PageElementText) GetPositionString() *Vector2String {
	if x, ok := x.GetPositionOneof().(*PageElementText_PositionString); ok {
		return x.PositionString
	}
	return nil
}

func (x *PageElementText) GetTextSizeEnum() TextSizeEnum {
	if x != nil {
		return x.TextSizeEnum
	}
	return TextSizeEnum_TEXT_SIZE_SMALL
}

func (x *PageElementText) GetAlignmentEnum() AlignmentEnum {
	if x != nil {
		return x.AlignmentEnum
	}
	return AlignmentEnum_ALIGNMENT_TOP_LEFT
}

func (x *PageElementText) GetNoReplace() bool {
	if x != nil {
		return x.NoReplace
	}
	return false
}

func (x *PageElementText) GetDecorations() []*PageElementDecoration {
	if x != nil {
		return x.Decorations
	}
	return nil
}

type isPageElementText_ColorOneof interface {
	isPageElementText_ColorOneof()
}

type PageElementText_Color struct {
	Color *Vector4 `protobuf:"bytes,2,opt,name=color,proto3,oneof"`
}

type PageElementText_ColorString struct {
	ColorString *ColorString `protobuf:"bytes,3,opt,name=color_string,json=colorString,proto3,oneof"`
}

func (*PageElementText_Color) isPageElementText_ColorOneof() {}

func (*PageElementText_ColorString) isPageElementText_ColorOneof() {}

type isPageElementText_PositionOneof interface {
	isPageElementText_PositionOneof()
}

type PageElementText_Position struct {
	Position *Vector2 `protobuf:"bytes,4,opt,name=position,proto3,oneof"`
}

type PageElementText_PositionString struct {
	PositionString *Vector2String `protobuf:"bytes,5,opt,name=position_string,json=positionString,proto3,oneof"`
}

func (*PageElementText_Position) isPageElementText_PositionOneof() {}

func (*PageElementText_PositionString) isPageElementText_PositionOneof() {}

// PageElementImage
// Next: 7
type PageElementImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Types that are assignable to PositionOneof:
	//
	//	*PageElementImage_Position
	//	*PageElementImage_PositionString
	PositionOneof isPageElementImage_PositionOneof `protobuf_oneof:"PositionOneof"`
	// Types that are assignable to SizeOneof:
	//
	//	*PageElementImage_Size
	//	*PageElementImage_SizeString
	SizeOneof     isPageElementImage_SizeOneof `protobuf_oneof:"SizeOneof"`
	AlignmentEnum AlignmentEnum                `protobuf:"varint,6,opt,name=alignment_enum,json=alignmentEnum,proto3,enum=proto.AlignmentEnum" json:"alignment_enum,omitempty"`
}

func (x *PageElementImage) Reset() {
	*x = PageElementImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementImage) ProtoMessage() {}

func (x *PageElementImage) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementImage.ProtoReflect.Descriptor instead.
func (*PageElementImage) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{6}
}

func (x *PageElementImage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (m *PageElementImage) GetPositionOneof() isPageElementImage_PositionOneof {
	if m != nil {
		return m.PositionOneof
	}
	return nil
}

func (x *PageElementImage) GetPosition() *Vector2 {
	if x, ok := x.GetPositionOneof().(*PageElementImage_Position); ok {
		return x.Position
	}
	return nil
}

func (x *PageElementImage) GetPositionString() *Vector2String {
	if x, ok := x.GetPositionOneof().(*PageElementImage_PositionString); ok {
		return x.PositionString
	}
	return nil
}

func (m *PageElementImage) GetSizeOneof() isPageElementImage_SizeOneof {
	if m != nil {
		return m.SizeOneof
	}
	return nil
}

func (x *PageElementImage) GetSize() *Vector2 {
	if x, ok := x.GetSizeOneof().(*PageElementImage_Size); ok {
		return x.Size
	}
	return nil
}

func (x *PageElementImage) GetSizeString() *Vector2String {
	if x, ok := x.GetSizeOneof().(*PageElementImage_SizeString); ok {
		return x.SizeString
	}
	return nil
}

func (x *PageElementImage) GetAlignmentEnum() AlignmentEnum {
	if x != nil {
		return x.AlignmentEnum
	}
	return AlignmentEnum_ALIGNMENT_TOP_LEFT
}

type isPageElementImage_PositionOneof interface {
	isPageElementImage_PositionOneof()
}

type PageElementImage_Position struct {
	Position *Vector2 `protobuf:"bytes,2,opt,name=position,proto3,oneof"`
}

type PageElementImage_PositionString struct {
	PositionString *Vector2String `protobuf:"bytes,3,opt,name=position_string,json=positionString,proto3,oneof"`
}

func (*PageElementImage_Position) isPageElementImage_PositionOneof() {}

func (*PageElementImage_PositionString) isPageElementImage_PositionOneof() {}

type isPageElementImage_SizeOneof interface {
	isPageElementImage_SizeOneof()
}

type PageElementImage_Size struct {
	Size *Vector2 `protobuf:"bytes,4,opt,name=size,proto3,oneof"`
}

type PageElementImage_SizeString struct {
	SizeString *Vector2String `protobuf:"bytes,5,opt,name=size_string,json=sizeString,proto3,oneof"`
}

func (*PageElementImage_Size) isPageElementImage_SizeOneof() {}

func (*PageElementImage_SizeString) isPageElementImage_SizeOneof() {}

// PageElementLine
// Next: 9
type PageElementLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StartOneof:
	//
	//	*PageElementLine_Start
	//	*PageElementLine_StartString
	StartOneof isPageElementLine_StartOneof `protobuf_oneof:"StartOneof"`
	// Types that are assignable to EndOneof:
	//
	//	*PageElementLine_End
	//	*PageElementLine_EndString
	EndOneof isPageElementLine_EndOneof `protobuf_oneof:"EndOneof"`
	// Types that are assignable to ColorOneof:
	//
	//	*PageElementLine_Color
	//	*PageElementLine_ColorString
	ColorOneof    isPageElementLine_ColorOneof `protobuf_oneof:"ColorOneof"`
	Thickness     float64                      `protobuf:"fixed64,7,opt,name=thickness,proto3" json:"thickness,omitempty"`
	AlignmentEnum AlignmentEnum                `protobuf:"varint,8,opt,name=alignment_enum,json=alignmentEnum,proto3,enum=proto.AlignmentEnum" json:"alignment_enum,omitempty"`
}

func (x *PageElementLine) Reset() {
	*x = PageElementLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementLine) ProtoMessage() {}

func (x *PageElementLine) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementLine.ProtoReflect.Descriptor instead.
func (*PageElementLine) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{7}
}

func (m *PageElementLine) GetStartOneof() isPageElementLine_StartOneof {
	if m != nil {
		return m.StartOneof
	}
	return nil
}

func (x *PageElementLine) GetStart() *Vector2 {
	if x, ok := x.GetStartOneof().(*PageElementLine_Start); ok {
		return x.Start
	}
	return nil
}

func (x *PageElementLine) GetStartString() *Vector2String {
	if x, ok := x.GetStartOneof().(*PageElementLine_StartString); ok {
		return x.StartString
	}
	return nil
}

func (m *PageElementLine) GetEndOneof() isPageElementLine_EndOneof {
	if m != nil {
		return m.EndOneof
	}
	return nil
}

func (x *PageElementLine) GetEnd() *Vector2 {
	if x, ok := x.GetEndOneof().(*PageElementLine_End); ok {
		return x.End
	}
	return nil
}

func (x *PageElementLine) GetEndString() *Vector2String {
	if x, ok := x.GetEndOneof().(*PageElementLine_EndString); ok {
		return x.EndString
	}
	return nil
}

func (m *PageElementLine) GetColorOneof() isPageElementLine_ColorOneof {
	if m != nil {
		return m.ColorOneof
	}
	return nil
}

func (x *PageElementLine) GetColor() *Vector4 {
	if x, ok := x.GetColorOneof().(*PageElementLine_Color); ok {
		return x.Color
	}
	return nil
}

func (x *PageElementLine) GetColorString() *ColorString {
	if x, ok := x.GetColorOneof().(*PageElementLine_ColorString); ok {
		return x.ColorString
	}
	return nil
}

func (x *PageElementLine) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *PageElementLine) GetAlignmentEnum() AlignmentEnum {
	if x != nil {
		return x.AlignmentEnum
	}
	return AlignmentEnum_ALIGNMENT_TOP_LEFT
}

type isPageElementLine_StartOneof interface {
	isPageElementLine_StartOneof()
}

type PageElementLine_Start struct {
	Start *Vector2 `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type PageElementLine_StartString struct {
	StartString *Vector2String `protobuf:"bytes,2,opt,name=start_string,json=startString,proto3,oneof"`
}

func (*PageElementLine_Start) isPageElementLine_StartOneof() {}

func (*PageElementLine_StartString) isPageElementLine_StartOneof() {}

type isPageElementLine_EndOneof interface {
	isPageElementLine_EndOneof()
}

type PageElementLine_End struct {
	End *Vector2 `protobuf:"bytes,3,opt,name=end,proto3,oneof"`
}

type PageElementLine_EndString struct {
	EndString *Vector2String `protobuf:"bytes,4,opt,name=end_string,json=endString,proto3,oneof"`
}

func (*PageElementLine_End) isPageElementLine_EndOneof() {}

func (*PageElementLine_EndString) isPageElementLine_EndOneof() {}

type isPageElementLine_ColorOneof interface {
	isPageElementLine_ColorOneof()
}

type PageElementLine_Color struct {
	Color *Vector4 `protobuf:"bytes,5,opt,name=color,proto3,oneof"`
}

type PageElementLine_ColorString struct {
	ColorString *ColorString `protobuf:"bytes,6,opt,name=color_string,json=colorString,proto3,oneof"`
}

func (*PageElementLine_Color) isPageElementLine_ColorOneof() {}

func (*PageElementLine_ColorString) isPageElementLine_ColorOneof() {}

// PageElementRectFilled
// Next: 9
type PageElementRectFilled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PositionOneof:
	//
	//	*PageElementRectFilled_Position
	//	*PageElementRectFilled_PositionString
	PositionOneof isPageElementRectFilled_PositionOneof `protobuf_oneof:"PositionOneof"`
	// Types that are assignable to SizeOneof:
	//
	//	*PageElementRectFilled_Size
	//	*PageElementRectFilled_SizeString
	SizeOneof isPageElementRectFilled_SizeOneof `protobuf_oneof:"SizeOneof"`
	// Types that are assignable to ColorOneof:
	//
	//	*PageElementRectFilled_Color
	//	*PageElementRectFilled_ColorString
	ColorOneof    isPageElementRectFilled_ColorOneof `protobuf_oneof:"ColorOneof"`
	Rounding      float64                            `protobuf:"fixed64,7,opt,name=rounding,proto3" json:"rounding,omitempty"`
	AlignmentEnum AlignmentEnum                      `protobuf:"varint,8,opt,name=alignment_enum,json=alignmentEnum,proto3,enum=proto.AlignmentEnum" json:"alignment_enum,omitempty"`
}

func (x *PageElementRectFilled) Reset() {
	*x = PageElementRectFilled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementRectFilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementRectFilled) ProtoMessage() {}

func (x *PageElementRectFilled) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementRectFilled.ProtoReflect.Descriptor instead.
func (*PageElementRectFilled) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{8}
}

func (m *PageElementRectFilled) GetPositionOneof() isPageElementRectFilled_PositionOneof {
	if m != nil {
		return m.PositionOneof
	}
	return nil
}

func (x *PageElementRectFilled) GetPosition() *Vector2 {
	if x, ok := x.GetPositionOneof().(*PageElementRectFilled_Position); ok {
		return x.Position
	}
	return nil
}

func (x *PageElementRectFilled) GetPositionString() *Vector2String {
	if x, ok := x.GetPositionOneof().(*PageElementRectFilled_PositionString); ok {
		return x.PositionString
	}
	return nil
}

func (m *PageElementRectFilled) GetSizeOneof() isPageElementRectFilled_SizeOneof {
	if m != nil {
		return m.SizeOneof
	}
	return nil
}

func (x *PageElementRectFilled) GetSize() *Vector2 {
	if x, ok := x.GetSizeOneof().(*PageElementRectFilled_Size); ok {
		return x.Size
	}
	return nil
}

func (x *PageElementRectFilled) GetSizeString() *Vector2String {
	if x, ok := x.GetSizeOneof().(*PageElementRectFilled_SizeString); ok {
		return x.SizeString
	}
	return nil
}

func (m *PageElementRectFilled) GetColorOneof() isPageElementRectFilled_ColorOneof {
	if m != nil {
		return m.ColorOneof
	}
	return nil
}

func (x *PageElementRectFilled) GetColor() *Vector4 {
	if x, ok := x.GetColorOneof().(*PageElementRectFilled_Color); ok {
		return x.Color
	}
	return nil
}

func (x *PageElementRectFilled) GetColorString() *ColorString {
	if x, ok := x.GetColorOneof().(*PageElementRectFilled_ColorString); ok {
		return x.ColorString
	}
	return nil
}

func (x *PageElementRectFilled) GetRounding() float64 {
	if x != nil {
		return x.Rounding
	}
	return 0
}

func (x *PageElementRectFilled) GetAlignmentEnum() AlignmentEnum {
	if x != nil {
		return x.AlignmentEnum
	}
	return AlignmentEnum_ALIGNMENT_TOP_LEFT
}

type isPageElementRectFilled_PositionOneof interface {
	isPageElementRectFilled_PositionOneof()
}

type PageElementRectFilled_Position struct {
	Position *Vector2 `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type PageElementRectFilled_PositionString struct {
	PositionString *Vector2String `protobuf:"bytes,2,opt,name=position_string,json=positionString,proto3,oneof"`
}

func (*PageElementRectFilled_Position) isPageElementRectFilled_PositionOneof() {}

func (*PageElementRectFilled_PositionString) isPageElementRectFilled_PositionOneof() {}

type isPageElementRectFilled_SizeOneof interface {
	isPageElementRectFilled_SizeOneof()
}

type PageElementRectFilled_Size struct {
	Size *Vector2 `protobuf:"bytes,3,opt,name=size,proto3,oneof"`
}

type PageElementRectFilled_SizeString struct {
	SizeString *Vector2String `protobuf:"bytes,4,opt,name=size_string,json=sizeString,proto3,oneof"`
}

func (*PageElementRectFilled_Size) isPageElementRectFilled_SizeOneof() {}

func (*PageElementRectFilled_SizeString) isPageElementRectFilled_SizeOneof() {}

type isPageElementRectFilled_ColorOneof interface {
	isPageElementRectFilled_ColorOneof()
}

type PageElementRectFilled_Color struct {
	Color *Vector4 `protobuf:"bytes,5,opt,name=color,proto3,oneof"`
}

type PageElementRectFilled_ColorString struct {
	ColorString *ColorString `protobuf:"bytes,6,opt,name=color_string,json=colorString,proto3,oneof"`
}

func (*PageElementRectFilled_Color) isPageElementRectFilled_ColorOneof() {}

func (*PageElementRectFilled_ColorString) isPageElementRectFilled_ColorOneof() {}

// PageElementList
// Next: 8
type PageElementList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElementCount string `protobuf:"bytes,1,opt,name=element_count,json=elementCount,proto3" json:"element_count,omitempty"`
	ElementIndex string `protobuf:"bytes,2,opt,name=element_index,json=elementIndex,proto3" json:"element_index,omitempty"`
	// Types that are assignable to PositionOneof:
	//
	//	*PageElementList_Position
	//	*PageElementList_PositionString
	PositionOneof isPageElementList_PositionOneof `protobuf_oneof:"PositionOneof"`
	// Types that are assignable to SizeOneof:
	//
	//	*PageElementList_Size
	//	*PageElementList_SizeString
	SizeOneof    isPageElementList_SizeOneof `protobuf_oneof:"SizeOneof"`
	PageElements []*PageElement              `protobuf:"bytes,7,rep,name=page_elements,json=pageElements,proto3" json:"page_elements,omitempty"`
}

func (x *PageElementList) Reset() {
	*x = PageElementList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElementList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElementList) ProtoMessage() {}

func (x *PageElementList) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElementList.ProtoReflect.Descriptor instead.
func (*PageElementList) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{9}
}

func (x *PageElementList) GetElementCount() string {
	if x != nil {
		return x.ElementCount
	}
	return ""
}

func (x *PageElementList) GetElementIndex() string {
	if x != nil {
		return x.ElementIndex
	}
	return ""
}

func (m *PageElementList) GetPositionOneof() isPageElementList_PositionOneof {
	if m != nil {
		return m.PositionOneof
	}
	return nil
}

func (x *PageElementList) GetPosition() *Vector2 {
	if x, ok := x.GetPositionOneof().(*PageElementList_Position); ok {
		return x.Position
	}
	return nil
}

func (x *PageElementList) GetPositionString() *Vector2String {
	if x, ok := x.GetPositionOneof().(*PageElementList_PositionString); ok {
		return x.PositionString
	}
	return nil
}

func (m *PageElementList) GetSizeOneof() isPageElementList_SizeOneof {
	if m != nil {
		return m.SizeOneof
	}
	return nil
}

func (x *PageElementList) GetSize() *Vector2 {
	if x, ok := x.GetSizeOneof().(*PageElementList_Size); ok {
		return x.Size
	}
	return nil
}

func (x *PageElementList) GetSizeString() *Vector2String {
	if x, ok := x.GetSizeOneof().(*PageElementList_SizeString); ok {
		return x.SizeString
	}
	return nil
}

func (x *PageElementList) GetPageElements() []*PageElement {
	if x != nil {
		return x.PageElements
	}
	return nil
}

type isPageElementList_PositionOneof interface {
	isPageElementList_PositionOneof()
}

type PageElementList_Position struct {
	Position *Vector2 `protobuf:"bytes,3,opt,name=position,proto3,oneof"`
}

type PageElementList_PositionString struct {
	PositionString *Vector2String `protobuf:"bytes,4,opt,name=position_string,json=positionString,proto3,oneof"`
}

func (*PageElementList_Position) isPageElementList_PositionOneof() {}

func (*PageElementList_PositionString) isPageElementList_PositionOneof() {}

type isPageElementList_SizeOneof interface {
	isPageElementList_SizeOneof()
}

type PageElementList_Size struct {
	Size *Vector2 `protobuf:"bytes,5,opt,name=size,proto3,oneof"`
}

type PageElementList_SizeString struct {
	SizeString *Vector2String `protobuf:"bytes,6,opt,name=size_string,json=sizeString,proto3,oneof"`
}

func (*PageElementList_Size) isPageElementList_SizeOneof() {}

func (*PageElementList_SizeString) isPageElementList_SizeOneof() {}

// PageElement
// Next: 5
type PageElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PageElementOneof:
	//
	//	*PageElement_Text
	//	*PageElement_Image
	//	*PageElement_Line
	//	*PageElement_RectFilled
	//	*PageElement_List
	PageElementOneof isPageElement_PageElementOneof `protobuf_oneof:"PageElementOneof"`
}

func (x *PageElement) Reset() {
	*x = PageElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageElement) ProtoMessage() {}

func (x *PageElement) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageElement.ProtoReflect.Descriptor instead.
func (*PageElement) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{10}
}

func (m *PageElement) GetPageElementOneof() isPageElement_PageElementOneof {
	if m != nil {
		return m.PageElementOneof
	}
	return nil
}

func (x *PageElement) GetText() *PageElementText {
	if x, ok := x.GetPageElementOneof().(*PageElement_Text); ok {
		return x.Text
	}
	return nil
}

func (x *PageElement) GetImage() *PageElementImage {
	if x, ok := x.GetPageElementOneof().(*PageElement_Image); ok {
		return x.Image
	}
	return nil
}

func (x *PageElement) GetLine() *PageElementLine {
	if x, ok := x.GetPageElementOneof().(*PageElement_Line); ok {
		return x.Line
	}
	return nil
}

func (x *PageElement) GetRectFilled() *PageElementRectFilled {
	if x, ok := x.GetPageElementOneof().(*PageElement_RectFilled); ok {
		return x.RectFilled
	}
	return nil
}

func (x *PageElement) GetList() *PageElementList {
	if x, ok := x.GetPageElementOneof().(*PageElement_List); ok {
		return x.List
	}
	return nil
}

type isPageElement_PageElementOneof interface {
	isPageElement_PageElementOneof()
}

type PageElement_Text struct {
	Text *PageElementText `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type PageElement_Image struct {
	Image *PageElementImage `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

type PageElement_Line struct {
	Line *PageElementLine `protobuf:"bytes,3,opt,name=line,proto3,oneof"`
}

type PageElement_RectFilled struct {
	RectFilled *PageElementRectFilled `protobuf:"bytes,4,opt,name=rect_filled,json=rectFilled,proto3,oneof"`
}

type PageElement_List struct {
	List *PageElementList `protobuf:"bytes,5,opt,name=list,proto3,oneof"`
}

func (*PageElement_Text) isPageElement_PageElementOneof() {}

func (*PageElement_Image) isPageElement_PageElementOneof() {}

func (*PageElement_Line) isPageElement_PageElementOneof() {}

func (*PageElement_RectFilled) isPageElement_PageElementOneof() {}

func (*PageElement_List) isPageElement_PageElementOneof() {}

// PageDescription
// Next: 4
type PageDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size         *Vector2       `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	PageElements []*PageElement `protobuf:"bytes,3,rep,name=page_elements,json=pageElements,proto3" json:"page_elements,omitempty"`
}

func (x *PageDescription) Reset() {
	*x = PageDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_parameter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageDescription) ProtoMessage() {}

func (x *PageDescription) ProtoReflect() protoreflect.Message {
	mi := &file_client_parameter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageDescription.ProtoReflect.Descriptor instead.
func (*PageDescription) Descriptor() ([]byte, []int) {
	return file_client_parameter_proto_rawDescGZIP(), []int{11}
}

func (x *PageDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PageDescription) GetSize() *Vector2 {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *PageDescription) GetPageElements() []*PageElement {
	if x != nil {
		return x.PageElements
	}
	return nil
}

var File_client_parameter_proto protoreflect.FileDescriptor

var file_client_parameter_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x59, 0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39,
	0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x74, 0x65, 0x78,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xd8, 0x02,
	0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x73, 0x6c, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x73, 0x6c,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3b, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a,
	0x0c, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x22, 0x5f, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x2b, 0x0a, 0x0d, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x79, 0x22, 0xbc, 0x02, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32,
	0x48, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x34, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0e, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xeb, 0x03, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x34, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2c,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32,
	0x48, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x42, 0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x22, 0xd1, 0x02, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x01, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01,
	0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x0e,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x53, 0x69,
	0x7a, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xb3, 0x03, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x22,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x01, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x34, 0x48, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x02, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68,
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x42, 0x0a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x42,
	0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xcb, 0x03,
	0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x74, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x48, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0b,
	0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x34, 0x48, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x37, 0x0a,
	0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0d, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42,
	0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x42, 0x0b, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0c, 0x0a,
	0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x80, 0x03, 0x0a, 0x0f,
	0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x48, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37,
	0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x32, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x69, 0x7a,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x65, 0x6f,
	0x66, 0x42, 0x0b, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x9d,
	0x02, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x50, 0x61,
	0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x82,
	0x01, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2a, 0x79, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x41, 0x52, 0x47,
	0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x52, 0x10, 0x04, 0x2a, 0xed,
	0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f,
	0x50, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4c, 0x49, 0x47,
	0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x52, 0x49, 0x47,
	0x48, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x03, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10,
	0x05, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42,
	0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d,
	0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x08, 0x2a, 0x54,
	0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x43, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x43, 0x4f, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x44, 0x45, 0x43, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x02, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x69, 0x72, 0x75, 0x6c, 0x2f, 0x67, 0x6f, 0x5f, 0x64, 0x61, 0x72,
	0x77, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x72, 0x77, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_parameter_proto_rawDescOnce sync.Once
	file_client_parameter_proto_rawDescData = file_client_parameter_proto_rawDesc
)

func file_client_parameter_proto_rawDescGZIP() []byte {
	file_client_parameter_proto_rawDescOnce.Do(func() {
		file_client_parameter_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_parameter_proto_rawDescData)
	})
	return file_client_parameter_proto_rawDescData
}

var file_client_parameter_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_client_parameter_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_client_parameter_proto_goTypes = []interface{}{
	(TextSizeEnum)(0),             // 0: proto.TextSizeEnum
	(AlignmentEnum)(0),            // 1: proto.AlignmentEnum
	(DecorationEnum)(0),           // 2: proto.DecorationEnum
	(*FontSize)(nil),              // 3: proto.FontSize
	(*ClientParameter)(nil),       // 4: proto.ClientParameter
	(*ColorString)(nil),           // 5: proto.ColorString
	(*Vector2String)(nil),         // 6: proto.Vector2String
	(*PageElementDecoration)(nil), // 7: proto.PageElementDecoration
	(*PageElementText)(nil),       // 8: proto.PageElementText
	(*PageElementImage)(nil),      // 9: proto.PageElementImage
	(*PageElementLine)(nil),       // 10: proto.PageElementLine
	(*PageElementRectFilled)(nil), // 11: proto.PageElementRectFilled
	(*PageElementList)(nil),       // 12: proto.PageElementList
	(*PageElement)(nil),           // 13: proto.PageElement
	(*PageDescription)(nil),       // 14: proto.PageDescription
	(*Vector2)(nil),               // 15: proto.Vector2
	(*Vector4)(nil),               // 16: proto.Vector4
}
var file_client_parameter_proto_depIdxs = []int32{
	0,  // 0: proto.FontSize.text_size_enum:type_name -> proto.TextSizeEnum
	3,  // 1: proto.ClientParameter.font_sizes:type_name -> proto.FontSize
	14, // 2: proto.ClientParameter.overlay_title:type_name -> proto.PageDescription
	14, // 3: proto.ClientParameter.overlay_state:type_name -> proto.PageDescription
	14, // 4: proto.ClientParameter.overlay_play:type_name -> proto.PageDescription
	15, // 5: proto.PageElementDecoration.offset:type_name -> proto.Vector2
	6,  // 6: proto.PageElementDecoration.offset_string:type_name -> proto.Vector2String
	16, // 7: proto.PageElementDecoration.color:type_name -> proto.Vector4
	5,  // 8: proto.PageElementDecoration.color_string:type_name -> proto.ColorString
	2,  // 9: proto.PageElementDecoration.decoration_enum:type_name -> proto.DecorationEnum
	16, // 10: proto.PageElementText.color:type_name -> proto.Vector4
	5,  // 11: proto.PageElementText.color_string:type_name -> proto.ColorString
	15, // 12: proto.PageElementText.position:type_name -> proto.Vector2
	6,  // 13: proto.PageElementText.position_string:type_name -> proto.Vector2String
	0,  // 14: proto.PageElementText.text_size_enum:type_name -> proto.TextSizeEnum
	1,  // 15: proto.PageElementText.alignment_enum:type_name -> proto.AlignmentEnum
	7,  // 16: proto.PageElementText.decorations:type_name -> proto.PageElementDecoration
	15, // 17: proto.PageElementImage.position:type_name -> proto.Vector2
	6,  // 18: proto.PageElementImage.position_string:type_name -> proto.Vector2String
	15, // 19: proto.PageElementImage.size:type_name -> proto.Vector2
	6,  // 20: proto.PageElementImage.size_string:type_name -> proto.Vector2String
	1,  // 21: proto.PageElementImage.alignment_enum:type_name -> proto.AlignmentEnum
	15, // 22: proto.PageElementLine.start:type_name -> proto.Vector2
	6,  // 23: proto.PageElementLine.start_string:type_name -> proto.Vector2String
	15, // 24: proto.PageElementLine.end:type_name -> proto.Vector2
	6,  // 25: proto.PageElementLine.end_string:type_name -> proto.Vector2String
	16, // 26: proto.PageElementLine.color:type_name -> proto.Vector4
	5,  // 27: proto.PageElementLine.color_string:type_name -> proto.ColorString
	1,  // 28: proto.PageElementLine.alignment_enum:type_name -> proto.AlignmentEnum
	15, // 29: proto.PageElementRectFilled.position:type_name -> proto.Vector2
	6,  // 30: proto.PageElementRectFilled.position_string:type_name -> proto.Vector2String
	15, // 31: proto.PageElementRectFilled.size:type_name -> proto.Vector2
	6,  // 32: proto.PageElementRectFilled.size_string:type_name -> proto.Vector2String
	16, // 33: proto.PageElementRectFilled.color:type_name -> proto.Vector4
	5,  // 34: proto.PageElementRectFilled.color_string:type_name -> proto.ColorString
	1,  // 35: proto.PageElementRectFilled.alignment_enum:type_name -> proto.AlignmentEnum
	15, // 36: proto.PageElementList.position:type_name -> proto.Vector2
	6,  // 37: proto.PageElementList.position_string:type_name -> proto.Vector2String
	15, // 38: proto.PageElementList.size:type_name -> proto.Vector2
	6,  // 39: proto.PageElementList.size_string:type_name -> proto.Vector2String
	13, // 40: proto.PageElementList.page_elements:type_name -> proto.PageElement
	8,  // 41: proto.PageElement.text:type_name -> proto.PageElementText
	9,  // 42: proto.PageElement.image:type_name -> proto.PageElementImage
	10, // 43: proto.PageElement.line:type_name -> proto.PageElementLine
	11, // 44: proto.PageElement.rect_filled:type_name -> proto.PageElementRectFilled
	12, // 45: proto.PageElement.list:type_name -> proto.PageElementList
	15, // 46: proto.PageDescription.size:type_name -> proto.Vector2
	13, // 47: proto.PageDescription.page_elements:type_name -> proto.PageElement
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_client_parameter_proto_init() }
func file_client_parameter_proto_init() {
	if File_client_parameter_proto != nil {
		return
	}
	file_vector_math_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_client_parameter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FontSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector2String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementDecoration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementRectFilled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElementList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_parameter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_client_parameter_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*PageElementDecoration_Offset)(nil),
		(*PageElementDecoration_OffsetString)(nil),
		(*PageElementDecoration_Color)(nil),
		(*PageElementDecoration_ColorString)(nil),
	}
	file_client_parameter_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PageElementText_Color)(nil),
		(*PageElementText_ColorString)(nil),
		(*PageElementText_Position)(nil),
		(*PageElementText_PositionString)(nil),
	}
	file_client_parameter_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PageElementImage_Position)(nil),
		(*PageElementImage_PositionString)(nil),
		(*PageElementImage_Size)(nil),
		(*PageElementImage_SizeString)(nil),
	}
	file_client_parameter_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PageElementLine_Start)(nil),
		(*PageElementLine_StartString)(nil),
		(*PageElementLine_End)(nil),
		(*PageElementLine_EndString)(nil),
		(*PageElementLine_Color)(nil),
		(*PageElementLine_ColorString)(nil),
	}
	file_client_parameter_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*PageElementRectFilled_Position)(nil),
		(*PageElementRectFilled_PositionString)(nil),
		(*PageElementRectFilled_Size)(nil),
		(*PageElementRectFilled_SizeString)(nil),
		(*PageElementRectFilled_Color)(nil),
		(*PageElementRectFilled_ColorString)(nil),
	}
	file_client_parameter_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*PageElementList_Position)(nil),
		(*PageElementList_PositionString)(nil),
		(*PageElementList_Size)(nil),
		(*PageElementList_SizeString)(nil),
	}
	file_client_parameter_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*PageElement_Text)(nil),
		(*PageElement_Image)(nil),
		(*PageElement_Line)(nil),
		(*PageElement_RectFilled)(nil),
		(*PageElement_List)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_parameter_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_parameter_proto_goTypes,
		DependencyIndexes: file_client_parameter_proto_depIdxs,
		EnumInfos:         file_client_parameter_proto_enumTypes,
		MessageInfos:      file_client_parameter_proto_msgTypes,
	}.Build()
	File_client_parameter_proto = out.File
	file_client_parameter_proto_rawDesc = nil
	file_client_parameter_proto_goTypes = nil
	file_client_parameter_proto_depIdxs = nil
}
